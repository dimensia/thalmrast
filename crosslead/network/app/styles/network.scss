
@import "bootstrap";

/* Our custom imports */
@import 'variables';
// TODO: define own mixins once we no longer take Bootstrap as a dependency

//
// All styling for the network directive are here
//

network {
  svg {
    background: $network-color-bg;
    @include gradient-radial(rgba(255,255,255,.4),transparent);
  }

  #glowGrad {
    stop:first-child {
      stop-color:#ffffff;
    }
    stop:last-child {
      stop-color:rgba(128,128,128,0);
      stop-opacity:0;
    }
  }

  .overlay {
    fill: none;
    pointer-events: all;
  }

  text {
    font-size: 12px;
  }

  g.link {
    .outer {
      //stroke: #000;
      //stroke-width: 4px;
      //stroke-opacity: .6;
    }

    .inner {
      stroke: #fff;
      stroke-width: 2px;
      //stroke-opacity: .6;
    }
  }

  line.link {
    stroke: #fff;
    stroke-width: 1.5px;
    //stroke-opacity: .6;
  }

  line.link-bg {
    filter: url(#glow);
    stroke: #fff;
    stroke-width: 2px;
  }

  .commLink {
    stroke-width: 1.5px;
  }


  // Node styles

  .node {
    //stroke: #000;
    //stroke-width: 1.5px;

    text {
      stroke: $network-color-text;
      fill: $network-color-text;
      stroke-width: 0.5px;
    }

    text.label {
      display: none;
      font-family: $network-font-family;
      font-size: 18px;

      stroke: $network-color-text;
      fill: $network-color-text;
      stroke-width: 0.5px;
    }
  }

  .black-square {
    fill: #000;
  }

  .blue-square, .blue-circle, .blue-person {
    fill: #0000ff;
  }
  .blue-square.img, .blue-circle.img, .blue-person.img {
    stroke: #0000ff;
  }

  .yellow-circle {
    fill: #ffff00;
  }
  .yellow-circle.img {
    stroke: #ffff00;
  }
  
  .red-circle {
    fill: #ff0000;
  }
  .red-circle.img {
    stroke: #ff0000;
  }

  .level-1 {
    fill: #fff;
  }

  .level-2 {
    fill: #fff;
  }

  .level-3 {
    fill: #fff;
  }

  .level-4 {
    fill: #fff;
  }

  .level-5 {
    fill: #fff;
  }

  // Selection styles

  .selection, .selected {
    fill: none;
    stroke: #000;
    stroke-width: 1.5px;
    stroke-dasharray: 5,5;
  }
}

//
// Styling for the network controls here
//

network-control {
  $width: 300px;

  button.openControls {
    position: absolute;
    top: 200px;
    left: -34px;
    display: inline-block;
    -ms-transform: rotate(-90deg);
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
    opacity: 1;

    &.ng-hide {
      //display: block !important;
      left: 2*-34px+$width;
      opacity: 0;
    }

    &.ng-hide-add.ng-hide-add-active,
    &.ng-hide-remove.ng-hide-remove-active {
      -webkit-transition:all ease-in 0.5s;
      transition:all ease-in 0.5s;
    }
  }

  .drawer {
    position: absolute;
    width: $width;
    height: 100%;
    background: rgba(255,255,255,0.1);
    padding: 8px 0 8px 8px;
    left: 0px;

    &.ng-hide {
      left: -$width;
    }

    &.ng-hide-add.ng-hide-add-active,
    &.ng-hide-remove.ng-hide-remove-active {
      -webkit-transition:all ease-in 0.5s;
      transition:all ease-in 0.5s;
    }

    button.closeControls {
      display: block;
      margin-bottom: 8px;
      width: $width - 16px;
      text-align: left;
    }

    .scroller {
      height: 100%;
      overflow: auto;
      padding-right: 8px;
    }

    .accordion-toggle {
      display: inline-block;
      width: 100%;
    }

    .header {
      border-bottom: 1px solid #000;
      margin-bottom: 8px;
    }

    label {
      clear: left;
      float: left;
    }

    .field {
      margin: 8px 0 0 100px;

      input {
        width: 100%;
      }
    }

    .buttons {
      margin-top: 8px;
      clear: both;
    }

    img {
      float: right;
      margin: 0 0 8px 8px;
      border: 1px solid #000;
    }

    .zoom {
      width: 42px;
    }
  }
}


//
// This styling is specific to the UI overlaid on the network-map
//

body {
  font-family: Oxygen, Helvetica, sans-serif;
  background: #eee;
  overflow: hidden;
}

button.btn:focus, button.btn:active:focus {
  outline: none;
}

.networkContainer {
  position: relative;

}


